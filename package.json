{
  "name": "flow-flow-api",
  "version": "1.0.1",
  "author": "jillix <contact@jillix.com> (http://jillix.com)",
  "description": "Flow API wrapper for flow.",
  "contributors": [
    "Adrian Ottiker <adrian@ottiker.com>",
    "Ionică Bizău <bizauionica@gmail.com> (http://ionicabizau.net)"
  ],
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jillix/flow-flow-api.git"
  },
  "keywords": [
    "flow",
    "stream",
    "network"
  ],
  "dependencies": {
    "class-methods": "^1.0.0",
    "flow-api": "jillix/flow-api",
    "function-args": "^1.0.0",
    "set-or-get": "^1.2.1",
    "static-methods": "^1.0.0"
  },
  "engine": {
    "node": ">=5"
  },
  "bugs": {
    "url": "https://github.com/jillix/flow-flow-api/issues"
  },
  "homepage": "https://github.com/jillix/flow-flow-api",
  "main": "lib/index.js",
  "devDependencies": {},
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "directories": {
    "example": "example"
  },
  "blah": {
    "documentation": [
      {
        "p": [
          [
            "This libary is nothing more than a smart wrapper around the",
            "[`flow-api`](https://github.com/jillix/flow-api). All the",
            "`flow-api` methods are exported in this module. :tada:"
          ],
          [
            "Supposing that in `flow-api` we have a function like",
            "`foo (bar, baz, cb)`, `flow-flow-api` exposes this `foo`",
            "method as data handler (`options`, `data`, `next`). :sparkles:"
          ],
          {
            "h3": "Calling methods"
          },
          {
            "code": {
              "language": "js",
              "content": [
                "flowApi.foo(\"first argument\", \"second argument\", function (err, data) {",
                "   /* ... */",
                "});",
                "",
                "// This is how you do it in flow-flow-api",
                "flowFlowApi.foo({}, {",
                "   bar: \"first argument\"",
                " , baz: \"second argument\"",
                "}, function (err, data) {",
                "   /* ... */",
                "});"
              ]
            }
          }
        ]
      }
    ]
  },
  "license": "MIT"
}
